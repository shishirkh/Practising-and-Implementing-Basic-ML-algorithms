# -*- coding: utf-8 -*-
"""
Created on Sat Mar 10 20:56:52 2018

@author: Shishir Khandelwal
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('Mall_Customers.csv')
X = dataset.iloc[:,[3,4]].values

#using the dendrogram to find the optimal number of clusters
import scipy.cluster.hierarchy as sch
dendrogram = sch.dendrogram(sch.linkage(X,method = 'ward'))
plt.title('dendrogram')
plt.xlabel('customers')
plt.ylabel('euclidean distances')
plt.show()

#fitting hierarchical clustering to the dataset
from sklearn.cluster import AgglomerativeClustering
hc = AgglomerativeClustering(n_clusters = 5, affinity = 'euclidean', linkage = 'ward')
y_hc = hc.fit_predict(X)

plt.scatter( X[y_kmeans == 0,0] , X[y_kmeans == 0,1] , s = 100 , c = 'red', label = 'Cluster 1' )
plt.scatter( X[y_kmeans == 1,0] , X[y_kmeans == 1,1] , s = 100 , c = 'blue', label = 'Cluster 2' )
plt.scatter( X[y_kmeans == 2,0] , X[y_kmeans == 2,1] , s = 100 , c = 'green', label = 'Cluster 3' )
plt.scatter( X[y_kmeans == 3,0] , X[y_kmeans == 3,1] , s = 100 , c = 'cyan', label = 'Cluster 4' )
plt.scatter( X[y_kmeans == 4,0] , X[y_kmeans == 4,1] , s = 100 , c = 'magenta', label = 'Cluster 5')
plt.title('clusters of customers')
plt.xlabel('annual income')
plt.ylabel('spending score')
plt.legend()
plt.show()

