import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from minisom import MiniSom

dataset=pd.read_csv('Credit_Card_Applications.csv')
X=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values

from sklearn.preprocessing import MinMaxScaler
sc=MinMaxScaler(feature_range=(0,1))
sc.fit_transform(X)

#SOM IMPLEMENTATION
som=MiniSom(x=10,y=10,input_len=14+1,sigma=1.0,learning_rate=0.5,decay_function=None,random_seed=None)

som.random_weights_init(X)

som.train_random(data=X,num_iteration=100)

#VISUALIZING THE RESULTS
from pylab import bone,pcolor,colorbar,plot,show
bone()
pcolor(som.distance_map().T)
colorbar()
markers=['o','s']
colors=['r','g']

for i,x in enumerate(X):#i=index x=vector of datass belonging to record no i
    w=som.winner(X)
    plot(w[0]+0.5,
         w[1]+0.5,
         markers[y[i]],
         markeredgecolor=colors[y[i]],
         markerfacecolor='None',
         markersize=10,
         markeredgewidth=2)
    
show()

    
#finding the frauds
mappings=som.win_map(X)
frauds=np.concatenate( (mappings[(3,9)],mappings[(4,6)] ),axis=0)
frauds=sc.inverse_transform(frauds)


                
    